import type { Metadata } from "next";
import { notFound } from 'next/navigation';
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import localFont from "next/font/local";

import { routing } from '@/i18n/routing';
import { Toaster } from "@/components/ui/toaster";
import { MyDialogProvider } from "@/providers/my-dialog-provider";
import { MyQueryProvider } from "@/providers/my-query-provider";
import "@/app/globals.css";

const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
  preload: false
});
const geistMono = localFont({
  src: "../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
  preload: false
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string }
}>) {
  const { locale } = await params

  // Ensure that the incoming `locale` is valid
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  const messages = await getMessages()

  return (
    <html lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider messages={messages}>
          <MyQueryProvider>
            {children}
            <MyDialogProvider />
            <Toaster />
          </MyQueryProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
